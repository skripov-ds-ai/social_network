version: '3.8'

services:

  app:
    build:
      dockerfile: cmd/Dockerfile
      context: ./
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "${PORT}:${PORT}"
    networks:
      - big_net

  db:
    image: postgres:15.4-alpine
    restart: on-failure
    volumes:
      - ./postgres_data:/var/lib/postgres/data
    networks:
      - big_net
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h db"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 20s
    ports:
      - "5432:${POSTGRES_PORT}"

  db_migration:
    image: gomicro/goose
    volumes:
      - ./db/migrations:/migrations
    env_file:
      - .env
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    command: >
      goose -dir=. up
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - big_net

networks:
  big_net:
    driver: bridge